name: Test & Deploy

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    env:
      NODE_ENV: integration
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      OPENROUTER_API_ENDPOINT: ${{ secrets.OPENROUTER_API_ENDPOINT }}
      AUTH_REDIRECT_URI: http://localhost:3000/auth/callback
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload E2E test videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos
          path: test-results/
          retention-days: 7

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always() && needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success'
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR Success
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;

            const comment = `## ‚úÖ All Tests Passed!

            üéâ Your pull request has successfully passed all checks:

            - ‚úÖ **Linting**: Code style and quality checks passed
            - ‚úÖ **Unit Tests**: All unit tests passed with coverage
            - ‚úÖ **E2E Tests**: End-to-end tests completed successfully

            Your code is ready for review! üöÄ

            ---
            *This comment was automatically generated by GitHub Actions*`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: comment
            });

  status-comment-failure:
    name: Status Comment Failure
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always() && (needs.lint.result == 'failure' || needs.unit-test.result == 'failure' || needs.e2e-test.result == 'failure')
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR Failure
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;

            const lintStatus = '${{ needs.lint.result }}' === 'success' ? '‚úÖ' : '‚ùå';
            const unitTestStatus = '${{ needs.unit-test.result }}' === 'success' ? '‚úÖ' : '‚ùå';
            const e2eTestStatus = '${{ needs.e2e-test.result }}' === 'success' ? '‚úÖ' : '‚ùå';

            const comment = `## ‚ùå Some Tests Failed

            Your pull request has some failing checks that need attention:

            - ${lintStatus} **Linting**: ${{ needs.lint.result }}
            - ${unitTestStatus} **Unit Tests**: ${{ needs.unit-test.result }}
            - ${e2eTestStatus} **E2E Tests**: ${{ needs.e2e-test.result }}

            Please check the workflow logs for details and fix the failing tests.

            ---
            *This comment was automatically generated by GitHub Actions*`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: comment
            });
